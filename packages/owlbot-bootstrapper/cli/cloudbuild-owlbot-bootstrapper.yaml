# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run by a CLI command manually (by a human), or when googleapis/googleapis API Index changes
# In order to run containers, so that languages can have their own isolated workflow to generate
# their language-specific repositories, we need to run these containers in Cloud Build. This file
# will trigger the pre- and post- processing steps of a language-specific container, as well as running
# the language-specific container itself.

steps:
  # Clones the target repository and opens a branch
  - name: ${_CONTAINER}
    args:
    - "pre-process"
    - "--language"
    - "$_LANGUAGE"
    - "--projectId"
    - "$_PROJECT_ID"
    - "--apiId"
    - "$_API_ID"
    - "--repoToClone"
    - "$_REPO_TO_CLONE"
    - "--installationId"
    - "$_INSTALLATION_ID'"
    - "--buildId"
    - "$BUILD_ID"
    - "--monoRepoDir"
    - "$_MONO_REPO_DIR"
    - "--monoRepoPath"
    - "$_MONO_REPO_PATH"
    - "--monoRepoName"
    - "$_MONO_REPO_NAME"
    - "--monoRepoOrg"
    - "$_MONO_REPO_ORG"
    - "--serviceConfigPath"
    - "$_SERVICE_CONFIG_PATH"
    - "--interContainerVarsPath"
    - "$_INTER_CONTAINER_VARS_PATH"
    - "--skipIssueOnFailure"
    - "$_SKIP_ISSUE_ON_FAILURE"
    - "--sourceCl"
    - "$_SOURCE_CL"
  # Generates the basic files necessary for a minimal implementation of a library
  # Current working directory contains the branch of the target repo in branchName.md
  # Keeping this as env variables so as to not force parsing on language-specific containers;
  - name: ${_LANGUAGE_CONTAINER}
    env:
    - 'LANGUAGE=$_LANGUAGE'
    - 'PROJECT_ID=$PROJECT_ID'
    - 'API_ID=$_API_ID'
    - 'REPO_TO_CLONE=$_REPO_TO_CLONE'
    - 'APP_INSTALLATION_ID=$_INSTALLATION_ID'
    - 'BUILD_ID=$BUILD_ID'
    - 'GITHUB_TOKEN=$_GITHUB_TOKEN'
    - 'MONO_REPO_PATH=$_MONO_REPO_PATH'
    - 'SERVICE_CONFIG_PATH=$_SERVICE_CONFIG_PATH'
    - 'INTER_CONTAINER_VARS_PATH=$_INTER_CONTAINER_VARS_PATH'
    - 'SOURCE_CL=$_SOURCE_CL'
  # Commits and pushes changes to a branch; if the repo is nonempty, opens a PR
  - name: ${_CONTAINER}
    args:
    - "post-process"
    - "--language"
    - "$_LANGUAGE"
    - "--projectId"
    - "$_PROJECT_ID"
    - "--apiId"
    - "$_API_ID"
    - "--repoToClone"
    - "$_REPO_TO_CLONE"
    - "--installationId"
    - "$_INSTALLATION_ID'"
    - "--buildId"
    - "$BUILD_ID"
    - "--monoRepoDir"
    - "$_MONO_REPO_DIR"
    - "--monoRepoPath"
    - "$_MONO_REPO_PATH"
    - "--monoRepoName"
    - "$_MONO_REPO_NAME"
    - "--monoRepoOrg"
    - "$_MONO_REPO_ORG"
    - "--serviceConfigPath"
    - "$_SERVICE_CONFIG_PATH"
    - "--interContainerVarsPath"
    - "$_INTER_CONTAINER_VARS_PATH"
    - "--skipIssueOnFailure"
    - "$_SKIP_ISSUE_ON_FAILURE"
    - "--sourceCl"
    - "$_SOURCE_CL"

