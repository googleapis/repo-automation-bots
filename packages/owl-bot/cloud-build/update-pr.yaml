# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Check git version
  - name: 'gcr.io/cloud-builders/git'
    args:
      - --version
  # Populate global username, email for git:
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - user.email
      - 'gcf-owl-bot[bot]@users.noreply.github.com'
    env:
      - 'HOME=/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - user.name
      - 'Owl Bot'
    env:
      - 'HOME=/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - pull.rebase
      - 'false'
    env:
      - 'HOME=/workspace'

  # Clone user/branch that created PR:
  - name: 'gcr.io/cloud-builders/git'
    args:
      - clone
      - -b
      - ${_PR_BRANCH}
      - --depth
      - '100'
      - --no-single-branch
      - https://github.com/${_PR_OWNER}/${_PR_REPOSITORY}.git
    env:
      - 'HOME=/workspace'

  # Run container listed in OwlBot.yaml:
  - name: ${_CONTAINER}
    dir: '${_PR_REPOSITORY}'
    env:
      - 'DEFAULT_BRANCH=$_DEFAULT_BRANCH'
      - 'NEW_PULL_REQUEST_TEXT_PATH=/workspace/new_pull_request_text.txt'

  # Validate all the OwlBot configs are well formed.
  - name: 'gcr.io/cloud-devrel-public-resources/owlbot-cli'
    args:
      - validate
      - '.'
      - --ignore-regexp
      - '.*/templates/.*'
      - --ignore-regexp
      - '.*/fixtures/.*'
    dir: ${_PR_REPOSITORY}
    env:
      - 'HOME=/workspace'

  # Install credentials *after* running the container.
  - name: 'bash'
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        echo https://x-access-token:$$GITHUB_TOKEN@github.com >> /workspace/.git-credentials
    env:
      - 'GITHUB_TOKEN=$_GITHUB_TOKEN'
      - 'HOME=/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - credential.helper
      - 'store --file /workspace/.git-credentials'
    env:
      - 'GITHUB_TOKEN=$_GITHUB_TOKEN'
      - 'HOME=/workspace'

  # Commit any changes back to the pull request.
  - name: 'gcr.io/cloud-devrel-public-resources/owlbot-cli'
    args:
      - commit-post-processor-update
      - --dest-repo
      - ${_OWNER}/${_REPOSITORY}
      - --pr
      - ${_PR}
      - --github-token
      - ${_GITHUB_TOKEN}
      - --new-pull-request-text-path
      - /workspace/new_pull_request_text.txt

    dir: ${_PR_REPOSITORY}
    env:
      - 'HOME=/workspace'

# allow 180 minutes (3 hours) for the post-processor image to run
timeout: '10800s'
logsBucket: 'gs://repo-automation-bots-post-processor-logs'
