import {DiscoveryDocUpdate} from '../src/process-checks/discovery-doc-update';
import {describe, it} from 'mocha';
import assert from 'assert';

describe('behavior of RegenerateReadme process', () => {
  it('should get constructed with the appropriate values', () => {
    const discoveryDocUpdate = new DiscoveryDocUpdate(
      'testAuthor',
      'testTitle',
      3,
      [{filename: 'hello', sha: '2345'}],
      'testRepoName',
      'testRepoOwner',
      1
    );

    const expectation = {
      incomingPR: {
        author: 'testAuthor',
        title: 'testTitle',
        fileCount: 3,
        changedFiles: [{filename: 'hello', sha: '2345'}],
        repoName: 'testRepoName',
        repoOwner: 'testRepoOwner',
        prNumber: 1,
      },
      classRule: {
        author: 'googleapis-publisher',
        titleRegex: /^chore: autogenerated discovery document update/,
      },
    };

    assert.deepStrictEqual(
      discoveryDocUpdate.incomingPR,
      expectation.incomingPR
    );
    assert.deepStrictEqual(discoveryDocUpdate.classRule, expectation.classRule);
  });

  it('should return false in checkPR if incoming PR does not match classRules', () => {
    const discoveryDocUpdate = new DiscoveryDocUpdate(
      'testAuthor',
      'testTitle',
      3,
      [{filename: 'hello', sha: '2345'}],
      'testRepoName',
      'testRepoOwner',
      1
    );

    assert.deepStrictEqual(discoveryDocUpdate.checkPR(), false);
  });

  it('should return true in checkPR if incoming PR does match classRules', () => {
    const discoveryDocUpdate = new DiscoveryDocUpdate(
      'googleapis-publisher',
      'chore: autogenerated discovery document update NOW',
      2,
      [
        {
          filename: 'README.md',
          sha: '2345',
        },
      ],
      'testRepoName',
      'testRepoOwner',
      1
    );

    assert.ok(discoveryDocUpdate.checkPR());
  });
});
